AWSTemplateFormatVersion: 2010-09-09

Description: Workload Discovery on AWS Application Insights Dashboard

Parameters:

  ApplicationResourceGroupName:
    Type: String

  ClusterArn:
    Type: String

  DiscoveryTaskLogGroup:
    Type: String

  DiscoveryTaskFrequency:
    Type: String

  ClusterLifecycleEventsLogGroup:
    Type: String

  DeploymentBucket:
    Type: String

  DeploymentBucketKey:
    Type: String

  NodeLambdaRuntime:
    Type: String

  PerspectiveAppSyncApiId:
    Type: String

Resources:

  ApplicationDashboard:
    Type: AWS::ApplicationInsights::Application
    Properties:
      AutoConfigurationEnabled: true
      ResourceGroupName: !Ref ApplicationResourceGroupName
      LogPatternSets:
        - PatternSetName: DiscoveryPatternSet
          LogPatterns:
              - PatternName: DiscoveryProcessOutOfMemory
                Pattern: 'Container killed due to memory usage'
                Rank: 1
              - PatternName: IamRoleNotDeployed
                Pattern: 'The discovery for this account will be skipped'
                Rank: 2
              - PatternName: ConfigEnableCheckFailed
                Pattern: 'AWS Config enablement check failed'
                Rank: 3
              - PatternName: UnableToAccessElasticContainerRegistry
                Pattern: 'unable to pull secrets or registry auth'
                Rank: 4
              - PatternName: CannotPullContainerFromRegistry
                Pattern: 'CannotPullContainerError'
                Rank: 5
              - PatternName: VpcConfigurationAwsServiceChecks
                Pattern: 'Could not connect to \d+ AWS service\(s\)'
                Rank: 6
              - PatternName: VpcConfigurationNatGatewayCheck
                Pattern: 'Failed to list NAT Gateways in vpc-[a-f0-9]{8,}'
                Rank: 7
              - PatternName: OrgAggregatorTypeCheck
                Pattern: 'cannot use an individual accounts aggregator'
                Rank: 7
      ComponentMonitoringSettings:
        - ComponentARN: !Ref ClusterArn
          Tier: DEFAULT
          ComponentConfigurationMode: DEFAULT_WITH_OVERWRITE
          DefaultOverwriteComponentConfiguration:
            ConfigurationDetails:
              Logs:
                - LogGroupName: !Ref DiscoveryTaskLogGroup
                  LogType: APPLICATION
                  PatternSet: DiscoveryPatternSet
                - LogGroupName: !Ref ClusterLifecycleEventsLogGroup
                  LogType: APPLICATION
                  PatternSet: DiscoveryPatternSet

  AppMonitoringLambdaFunctionRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: 'No Application Insights actions support resource level permissions.'
    Properties:
      Path: '/'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CwLoggingPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
        - PolicyName: ApplicationInsightsPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - applicationinsights:ListProblems
                  - applicationinsights:DescribeProblemObservations
                Resource: '*'

  AppMonitoringFunction:
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W89
            reason: This Lambda does not connect to any resources in a VPC
    Type: AWS::Lambda::Function
    Properties:
      Role: !GetAtt AppMonitoringLambdaFunctionRole.Arn
      Handler: index.handler
      Code:
        S3Bucket: !Ref DeploymentBucket
        S3Key: !Sub ${DeploymentBucketKey}/application-monitoring.zip
      Runtime: !Ref NodeLambdaRuntime
      Description: Lambda for monitoring Workload Discovery solution
      Timeout: 10
      TracingConfig:
        Mode: Active
      MemorySize: 1024
      Environment:
        Variables:
          ACCOUNT_ID: !Ref AWS::AccountId
          APPLICATION_RESOURCE_GROUP: !Ref ApplicationResourceGroupName
          DISCOVERY_TASK_FREQUENCY: !Ref DiscoveryTaskFrequency

  AppMonitoringLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AppMonitoringFunction}
      RetentionInDays: 365

  AppMonitoringInvokeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - appsync.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: WdAppSyncAppMonitoringPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: !GetAtt AppMonitoringFunction.Arn

  AppMonitoringLambdaLambdaDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: !Ref PerspectiveAppSyncApiId
      Name: App_Monitor_Lambda_DS9
      Description: WD application monitoring Lambda AppSync Data Source
      Type: AWS_LAMBDA
      ServiceRoleArn: !GetAtt AppMonitoringInvokeRole.Arn
      LambdaConfig:
        LambdaFunctionArn: !GetAtt AppMonitoringFunction.Arn

  GetApplicationProblemsResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !Ref PerspectiveAppSyncApiId
      TypeName: Query
      FieldName: getApplicationProblems
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0
      CodeS3Location: !Sub s3://${DeploymentBucket}/${DeploymentBucketKey}/default-resolver.js
      DataSourceName: !GetAtt AppMonitoringLambdaLambdaDataSource.Name
      CachingConfig:
        CachingKeys:
          - '$context.arguments'
        Ttl: 10